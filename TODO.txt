Laser Ansteuerung TODO

Am ende alles mit testarray löschen

THIS TIME TODO:::
##########VIEL EINFACHER! Nicht direkt drinnen zeichnen, in illustrator oder klayout (gds file) und dann importieren
probieren!
--------> Randfälle testen, Code säubern
--------> Code säubern. Welche code sachen braucht man nimmer?





Good to know:
First position is never shot. Must be moved to manually. Falls es die erste Linie überhaupt ist: Manuell an erste position bewegen und schießen!
Bewegungen sind relativ. Koordinatensystem recht egal
Grundeinheit ist mm!
Annahme:keine Einzelnen Schüsse, denen keine Linien nachfolgen. (Nur linien. keine punkte)

in SkriptKonverter:
Graph zu Koordinaten?
****** Stimmt das Koordinaten system? (wegen bewegung. rechts und hoch ist PLUS bei mir aktuell)
	Gibt es im Laser negative koordinaten? Ja!


in GUI: 
-Test ob name bereits existiert in GUI?
-Gitter skalierbar nach kleinstem Pitch? (min. 1µm)
-If new Line: Add single shot for first position (start of line)
-new Line / Done für Lineshot (damit man weiß, wann neue line beginnen soll, und wann alte fortgeführt) -> STOP (5) in Queue, damit mans weiß
-Doppelklick an gleiche Stelle für point shot
-ESC für Aktuellen Punkt loslassen/löschen --> rückgängig
-Show wo überall ein schuss hinkommt (im gitter) vor allem interessant für diagonalShoot?

____________________________________________________________
******Check*************************************************

-braucht man nach jedem schuss pause?

____________________________________________________________
******DONE*************************************************
-readGDS2txt.py fertig. Returns queue, pArray, lArray
-Rasterfahrt macht for-schleife
-createUserScript mit testArray.

____________________________________________________________
******Checked*************************************************
OK Rasterfahrt IN check: (x,y,pitch)
(500, 500, 60), (100, 500, 50), (500, 100, 50)

OK Rasterfahrt OUT check: (x,y,pitch) -> geht nur bei Quadratischen
(300, 300, 30), (300, 90, 30), (90, 300, 30)

diagonalShoot check: (x0, y0, x1, y1, pitch) -> xy0 und xy1 auch vertauscht getestet
(520, 520, 400, 20, 20) (400, 20, 540, 520, 520)
(20, 20, 540, 60, 20) rückwarts ok
(20, 520, 20, 600, 20) (520, 20, 20, 600, 20)
(20, 20, 520, 600, 20) (20, 20, 40, 600, 20)

____________________________________________________________
****** TODO *************************************************

2 MODI:	-> 3 Arrays.	A): Queue Array (Nx2). Spalte 1: Point = 0, Line = 1 || Spalte 2: Idx im jeweiligen P oder L array. Start = 0!
		   	B): Point Array (NPx2). Spalte 1: X || Spalte 2: Y
			C): Line Array	(NLx4). Spalte 1,2: X0, Y0 || Spalte 3,4: X1, Y1

Punktschuss P: move to certain point and shoot
Linienschuss L: Schieße in nem Pitch


Anforderungen:	*Rasterschuss: von origin aus bei bestimmten pitch raster von außen nach innen/ innen nach außen -> LÄUFT?
		*Gleiche Stelle nicht doppelt lasern!!!!!
		*In GUI: Darstellung Raster auf Vorschau? (importiertes GDL)
		(*für jeden Schuss pitch angeben (in verschiedenen Farben kodieren. auf schwarzem Hintergrund))
		*gdl file importieren und abfahren(koordinaten)
		*Dafür: start und endpunkt für schüsse in nem pitch (Linienschuss)

		* Häschen für Eric? Eastereggs :D Ascii art beim abspeichern mit namen "hase"

Interface mit Koordinatensystem/Gitter? Tkinter
--> Pfad des Lasers festlegen. Graphisch, Entfernung?

Pfad in Skript umwandeln für Laser in VBS
Skript speichern für wiederholte nutzen
-X,Y,Z anfahren. Von dort aus Pfad verfolgen



____________________________________________________________
******Script Converter**************************************
Take inputs from GUI and turn into vbs script
GUI input reihenfolge: startX, startY, startZ, startLeistung, pulse, repRate, numShots, pulseEnergy, hv, energyMode, triggerMode, waitMs


_______________________________________________________
**************VBS**************************************

*Case insensitive! (Groß Klein eGaL)

*Kommentare mit '

*Variablen Deklarierung:
dim -> nur in gleicher Procedure
Public -> für alle
Private -> nur in diesem Script

*Funktionen (Function) und Prozeduren (Sub)
Sub hat keinen Rückgabewert, Function schon
Umrahmt von Sub, End Sub
Beim Aufrufen braucht man keine Klammern



